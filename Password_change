Begin {
    Write-Verbose "Script execution has started"
    # Define Log file
    [String]$LogFile = "H:\Password-Update-Capgemini\Result_" + (Get-Date -Format MM-dd-yyyy_hh-mm) + ".csv"
    Write-Verbose "At the end of execution, check $LogFile for service account details"
    # Define domain and netbios name 
    $DomainNetBios = "REDMOND"
    $DomainFQDN = "redmond.corp.microsoft.com"
    $DomainFQDNMail = "microsoft.com"
    # Importing service accounts
    $Accounts = Import-Csv "H:\Password-Update-Capgemini\ServiceAccounts2.csv"
    $VPreference = $VerbosePreference
    $ServiceName=""
    $cred = get-credential
    $VM="FDNEONPRM01"
}
Process {
#GC "D:\Testing\Password Update\StrlightServers.txt"
CLS
    foreach($MachineName in GC "H:\Password-Update-Capgemini\Eddataservers.txt" ){
    Write-Host "$MachineName - Processing..." -ForegroundColor Magenta
    Write-Verbose "$MachineName - Trying to establish PSSession..."
	$MachineSession = New-PSSession -ComputerName $MachineName -Credential $cred #-ErrorAction SilentlyContinue
	    if ($MachineSession.State -ne "Opened") {
            Write-Host "$MachineName - Cannot establish PS session" -ForegroundColor Red
            Write-Verbose "$MachineName - Cannot establish PS session"
            $Services = @()
            $item = @{}
            $item.PSComputerName = $MachineName
            $item.ServiceType = 'NA'
            $item.ServiceName = 'NA'
            $item.ServiceAccount = 'NA'
            $item.Action = 'Failed to connect to PsSession'
            $PsObject = New-Object -TypeName PSObject -Property $item
            $Services += $PsObject
            $Services | Select-Object PSComputerName, ServiceType, ServiceName, ServiceAccount, Action | Export-Csv $LogFile -Append -NoTypeInformation -Encoding ASCII -Force
	    }
	    else {
            Write-Host "$MachineName - Successfully establish PSSession" -ForegroundColor green
            Write-Verbose "$MachineName - Successfully establish PSSession"
		    Invoke-Command -Session $MachineSession -InputObject $Accounts -ArgumentList $DomainNetBios, $DomainFQDN, $VPreference -ScriptBlock{
                param (
                    $DomainNetBios,
                    $DomainFQDN,
                    $VPreference
                )
                $VerbosePreference = $VPreference
                Write-Verbose "Remote execution started"
                # get input object
                $Accounts = @()
                foreach ($Objects in $input) {
                    foreach ($Object in $Objects) {
                        $item = @{}
                        $item.ServiceAccount = $Object.ServiceAccount
                        $item.Password = $Object.Password
                        $PsObject = New-Object -TypeName PSObject -Property $item
                        $Accounts += $PsObject
                    }
                }
                $Services = @()
                
			    Write-Verbose "$env:COMPUTERNAME - Update Password - Services"
                foreach ($Object in $Accounts) {
	                $ServiceAccount = $Object.ServiceAccount
                    $Password = $Object.Password
	                $Service = Get-WmiObject -Class Win32_Service | Where-Object {($_.StartName -eq "$DomainNetBios\$ServiceAccount") -or ($_.StartName -eq "$ServiceAccount@$DomainFQDNMail")}
	                foreach ($Object in $Service) {
                        if ($Object -ne $null) {
                            try {
                                $Object.StopService() 
                                start-sleep -s 10 
                                Write-Host "Updating password for $ServiceAccount on $($Object.Name)" $ServiceAccount $Password
                                Write-Verbose "Updating password for $ServiceAccount on $($Object.Name)"
			                    $ChangeService = $Object.Change($null,$null,$null,$null,$null,$null,"$DomainNetBios\$ServiceAccount","$Password")
                                Start-Sleep -s 10
                                $Object.StartService()                             
                                $item = @{}
                                $item.ServiceType = 'Service'
                                $item.ServiceName = $Object.Name
                                $item.ServiceAccount = $ServiceAccount
                                $item.Action = 'Success'
                                $PsObject = New-Object -TypeName PSObject -Property $item
                                $Services += $PsObject
                               
                            }
		                    catch {
                                Write-Verbose "Update password failed for $ServiceAccount on $($Object.Name)"
                                $item = @{}
                                $item.ServiceType = 'Service'
                                $item.ServiceName = $Object.Name
                                $item.ServiceAccount = $ServiceAccount
                                $item.Action = 'Fail'
                                $PsObject = New-Object -TypeName PSObject -Property $item
                                $Services += $PsObject
		                    }
                        }
	                }
                }		
                
                Write-Verbose "End of remote execution"
            }
		    Write-Verbose "$MachineName - End of machine PS session"
		    $Services = Invoke-Command -Session $MachineSession -ScriptBlock {$Services}
		    $Services | Select-Object PSComputerName, ServiceType, ServiceName, ServiceAccount, Action | Export-Csv $LogFile -Append -NoTypeInformation -Encoding ASCII -Force
		    Write-Verbose "$MachineName - Removing PS Session"
		    Remove-PSSession -Session $MachineSession
	    }
    }
}
end {
    Write-Host "Script execution is completed, check $LogFile for details"
}
